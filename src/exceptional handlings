import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.time.LocalDateTime;

// Custom Exceptions
class InvalidAgeException extends Exception {
    public InvalidAgeException(String message) {
        super(message);
    }
}

class NegativeCaloriesException extends Exception {
    public NegativeCaloriesException(String message) {
        super(message);
    }
}

class WorkoutNotFoundException extends Exception {
    public WorkoutNotFoundException(String message) {
        super(message);
    }
}

class FitnessGoalNotSetException extends Exception {
    public FitnessGoalNotSetException(String message) {
        super(message);
    }
}

class DailyStepGoalNotReachedException extends Exception {
    public DailyStepGoalNotReachedException(String message) {
        super(message);
    }
}

// Main Fitness App Class
public class FitnessApp {

    public static void main(String[] args) {
        try {
            checkAge(15); // Example method that could throw InvalidAgeException
        } catch (InvalidAgeException e) {
            logToConsoleAndFile("ERROR: " + e.getMessage());
        }

        try {
            logCalories(-500); // Example method that could throw NegativeCaloriesException
        } catch (NegativeCaloriesException e) {
            logToConsoleAndFile("ERROR: " + e.getMessage());
        }

        tryWithResourcesExample();
    }

    // Method to check age
    public static void checkAge(int age) throws InvalidAgeException {
        if (age < 18) {
            throw new InvalidAgeException("User age is less than the minimum required age of 18.");
        }
        logToConsoleAndFile("Age check passed.");
    }

    // Method to log calories
    public static void logCalories(int calories) throws NegativeCaloriesException {
        if (calories < 0) {
            throw new NegativeCaloriesException("Calories cannot be negative.");
        }
        logToConsoleAndFile("Calories logged: " + calories);
    }

    // Try-With-Resources Example
    public static void tryWithResourcesExample() {
        try (FileWriter fw = new FileWriter("workout-log.txt", true);
             PrintWriter pw = new PrintWriter(fw)) {
            pw.println("Workout logged at: " + LocalDateTime.now());
            logToConsoleAndFile("Workout log updated successfully.");
        } catch (IOException e) {
            logToConsoleAndFile("ERROR: Unable to write to workout log file. " + e.getMessage());
        }
    }

    // Logging method
    public static void logToConsoleAndFile(String message) {
        System.out.println(message); // Log to console

        // Log to file
        try (FileWriter fw = new FileWriter("app-log.txt", true);
             PrintWriter pw = new PrintWriter(fw)) {
            pw.println(LocalDateTime.now() + " - " + message);
        } catch (IOException e) {
            System.err.println("ERROR: Unable to write to log file. " + e.getMessage());
        }
    }
}

